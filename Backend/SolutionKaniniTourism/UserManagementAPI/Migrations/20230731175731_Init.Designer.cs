// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI.Models;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(UserManagementContext))]
    [Migration("20230731175731_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UserManagementAPI.Models.TravelAgent", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgencyPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Email");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("HashKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "Admin@gmail.com",
                            HashKey = new byte[] { 136, 74, 215, 45, 125, 125, 134, 118, 105, 106, 183, 63, 15, 38, 143, 70, 70, 228, 217, 184, 54, 70, 226, 60, 230, 218, 176, 159, 12, 219, 53, 89 },
                            Id = 1,
                            Password = new byte[] { 214, 103, 110, 34, 133, 85, 194, 4, 199, 18, 128, 177, 107, 236, 148, 16, 196, 92, 18, 49, 71, 81, 155, 189, 58, 222, 173, 15, 77, 202, 192, 230, 174, 168, 173, 175, 152, 0, 185, 80, 191, 252, 86, 232, 2, 99, 116, 39, 94, 196, 84, 202, 99, 20, 40, 104, 135, 17, 43, 32, 165, 119, 123, 26 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.UserDetails", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("UserManagementAPI.Models.TravelAgent", b =>
                {
                    b.HasOne("UserManagementAPI.Models.User", "User")
                        .WithMany("TravelAgent")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Models.UserDetails", b =>
                {
                    b.HasOne("UserManagementAPI.Models.User", "User")
                        .WithMany("UserDetails")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Navigation("TravelAgent");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
