// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI.Models;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(UserManagementContext))]
    partial class UserManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UserManagementAPI.Models.TravelAgent", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AgencyPhone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Email");

                    b.ToTable("TravelAgents");
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("HashKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "Admin@gmail.com",
                            HashKey = new byte[] { 8, 20, 117, 122, 0, 186, 155, 160, 8, 183, 193, 154, 236, 255, 29, 20, 193, 223, 4, 161, 120, 127, 112, 129, 109, 103, 193, 66, 24, 167, 201, 92 },
                            Id = 1,
                            Password = new byte[] { 168, 202, 99, 27, 117, 228, 22, 145, 243, 192, 182, 152, 213, 49, 78, 193, 243, 194, 93, 252, 111, 69, 41, 76, 212, 66, 4, 236, 245, 213, 171, 231, 34, 78, 78, 67, 53, 175, 143, 141, 250, 99, 5, 101, 205, 71, 216, 209, 39, 103, 192, 135, 187, 50, 135, 143, 111, 117, 81, 53, 75, 5, 177, 150 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.UserDetails", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateofBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("UserManagementAPI.Models.VerificationCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Codes")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.ToTable("VerificationCodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codes = 909885,
                            Email = "Admin@gmail.com"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.TravelAgent", b =>
                {
                    b.HasOne("UserManagementAPI.Models.User", "User")
                        .WithMany("TravelAgent")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Models.UserDetails", b =>
                {
                    b.HasOne("UserManagementAPI.Models.User", "User")
                        .WithMany("UserDetails")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Models.VerificationCodes", b =>
                {
                    b.HasOne("UserManagementAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Navigation("TravelAgent");

                    b.Navigation("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
